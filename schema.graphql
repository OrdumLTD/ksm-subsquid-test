type Account @entity {
  "Account address"
  id: ID!
  transfersTo: [Transfer!] @derivedFrom(field: "to")
  transfersFrom: [Transfer!] @derivedFrom(field: "from")
}

type Transfer @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  extrinsicHash: String @index
  from: Account!
  to: Account!
  amount: BigInt! @index
  fee: BigInt! # fee is calculated at the best effort and may be zero for some old extrinsics
}


# type TreasuryProposal @entity {
#   id: ID!
#   value: BigInt!
#   beneficiary: String!
#   status: TreasuryStatus!
# }

# enum TreasuryStatus {
#   PROPOSED
#   APPROVED
#   REJECTED
#   AWARDED
# }

# type HistoricalTreasuryBalance @entity {
#   id: ID!
#   balance: BigInt!
#   date: DateTime!
#   treasury: Treasury!
# }

# type Treasury @entity {
#   id: ID!
#   balance: BigInt!
#   historicalBalances: [HistoricalTreasuryBalance!] @derivedFrom(field: "treasury")
# }

type Proposal @entity {
  "Proposal"
  id: ID!
}

type Preimage @entity {
  id: ID!
  createdAt: DateTime
  createdAtBlock: BigInt
}
